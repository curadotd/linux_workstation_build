#!/bin/bash

# Detect the Linux distribution
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$NAME
elif type lsb_release >/dev/null 2>&1; then
    OS=$(lsb_release -si)
else
    OS=$(uname -s)
fi

# Function to install packages based on the distribution
install_packages() {
    case $OS in
        "Arch Linux")
            # Check if multilib repository is enabled
            if ! grep -q "^\[multilib\]" /etc/pacman.conf; then
                echo "Enabling multilib repository for 32-bit support..."
                sudo sed -i "/\[multilib\]/,/Include/s/^#//" /etc/pacman.conf
                sudo pacman -Sy
            fi
            sudo pacman -Syyu $@
            ;;
        "Debian" | "Ubuntu")
            sudo apt update
            sudo apt install $@
            ;;
        "Rocky Linux")
            sudo dnf install $@
            ;;
        *)
            echo "Unsupported distribution: $OS"
            exit 1
            ;;
    esac
}

# Install development tools and other necessary packages
case $OS in
    "Arch Linux")
        install_packages base-devel linux-headers
        ;;
    "Debian" | "Ubuntu")
        install_packages build-essential dkms linux-headers-amd64 libgl1-mesa-dev pkg-config meson ninja-build
        ;;
    "Rocky Linux")
        install_packages gcc gcc-c++ kernel-devel kernel-headers
        ;;
esac

# Ask if the user wants to use unstable/testing repositories
read -p "Do you want to use unstable/testing repositories? This is not recommended for production systems. (y/n): " unstable_choice
if [[ "$unstable_choice" == "y" ]]; then
    case $OS in
        "Arch Linux")
            echo "Arch Linux is a rolling release distribution. No changes needed."
            ;;
        "Debian" | "Ubuntu")
            echo "Switching to Debian Sid..."
            # Comment out existing entries in sources.list
            sudo sed -i 's/^/#/' /etc/apt/sources.list

            # Add Debian Sid repositories
            echo "# Debian Sid repositories" | sudo tee -a /etc/apt/sources.list
            echo "deb http://deb.debian.org/debian/ sid main contrib non-free non-free-firmware" | sudo tee -a /etc/apt/sources.list
            echo "deb-src http://deb.debian.org/debian/ sid main contrib non-free non-free-firmware" | sudo tee -a /etc/apt/sources.list
            sudo apt update
            # Perform full system upgrade
            sudo apt upgrade
            echo "System upgraded to Debian Sid."
            ;;
        "Rocky Linux")
            echo "Enabling testing repositories for Rocky Linux..."
            sudo dnf config-manager --set-enabled crb
            sudo dnf upgrade
            ;;
    esac
else
    echo "Continuing with the current stable version."
fi

# Ask user if they want to install graphics drivers
read -p "Do you want to install graphics drivers? (y/n) " install_drivers
if [[ $install_drivers =~ ^[Yy]$ ]]; then
    # Check for NVIDIA GPU
    if lspci | grep -i nvidia > /dev/null; then
        echo "NVIDIA GPU detected. Installing NVIDIA drivers..."
        case $OS in
            "Arch Linux")
                install_packages nvidia nvidia-utils lib32-nvidia-utils nvidia-settings cuda
                ;;
            "Debian" | "Ubuntu")
                sudo apt update
                sudo apt install nvidia-driver firmware-misc-nonfree
                sudo dpkg --add-architecture i386 && sudo apt update
                sudo apt install nvidia-driver-libs nvidia-driver-libs:i386
                sudo apt install nvidia-cuda-dev nvidia-cuda-toolkit
                ;;
            "Rocky Linux")
                sudo dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo
                sudo dnf install nvidia-driver nvidia-settings cuda
                ;;
        esac
    elif lspci | grep -i amd > /dev/null; then
        echo "AMD GPU detected. Installing AMD drivers..."
        case $OS in
            "Arch Linux")
                install_packages xf86-video-amdgpu mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon
                ;;
            "Debian" | "Ubuntu")
                install_packages firmware-amd-graphics libgl1-mesa-dri libglx-mesa0 mesa-vulkan-drivers xserver-xorg-video-all
                ;;
            "Rocky Linux")
                install_packages mesa-dri-drivers mesa-vulkan-drivers vulkan-tools
                ;;
        esac
    elif lspci | grep -i intel > /dev/null; then
        echo "Intel GPU detected. Installing Intel drivers..."
        case $OS in
            "Arch Linux")
                install_packages xf86-video-intel mesa lib32-mesa vulkan-intel lib32-vulkan-intel
                ;;
            "Debian" | "Ubuntu")
                install_packages xserver-xorg-video-intel
                ;;
            "Rocky Linux")
                install_packages intel-media-driver
                ;;
        esac
    else
        echo "No supported GPU detected. Please check your hardware."
    fi
else
    echo "Skipping graphics driver installation."
fi

# Clean up
case $OS in
    "Arch Linux")
        sudo pacman -Scc
        ;;
    "Debian" | "Ubuntu")
        sudo apt autoremove
        sudo apt autoclean
        ;;
    "Rocky Linux")
        sudo dnf autoremove
        sudo dnf clean all
        ;;
esac

read -p "Do you want to reboot the system now? (y/n): " reboot_choice
if [[ "$reboot_choice" == "y" ]]; then
    echo "Rebooting the system..."
    sudo reboot
else
    echo "Reboot skipped. Please reboot manually later."
fi
